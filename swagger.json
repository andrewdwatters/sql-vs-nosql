{
  "swagger": "2.0",
  "info": {
    "description": "Back-end service for retrieving Users, Posts, Comments and Reactions from either a SQL or NoSQL database, depending on the client's input.",
    "version": "2.0.0",
    "title": "SQL vs NoSQL"
  },
  "host": "www.TODO.com",
  "basePath": "/v2",
  "schemes": [
    "https",
    "http"
  ],
  "tags": [
    {
      "name": "Users"
    },
    {
      "name": "Posts"
    },
    {
      "name": "Comments"
    },
    {
      "name": "Reactions"
    }
  ],
  "paths": {
    "/users/getUserById": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a user by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of user to return",
            "required": true,
            "type": "string"
          },
          {
            "name": "database",
            "in": "query",
            "description": "Source from which to retrieve data (\"sql\" or \"nosql\")",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "404": {
            "description": "Invalid id supplied"
          },
          "500": {
            "description": "Missing required field / malformed request"
          }
        }
      }
    },
    "/users/createUser": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a new user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "database",
            "in": "query",
            "description": "Source from which to retrieve data (\"sql\" or \"nosql\")",
            "required": true,
            "type": "string"
          },
          {
            "name": "updates",
            "in": "body",
            "description": "user to be created",
            "schema": {
              "type": "object",
              "required": [
                "username",
                "avitar"
              ],
              "properties": {
                "username": {
                  "description": "Desired username/display name",
                  "type": "string"
                },
                "avitar": {
                  "description": "Desired avitar url",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "500": {
            "description": "Missing required field / malformed request"
          }
        }
      }
    },
    "/users/editUser": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Updates a user's information",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of user to update",
            "required": true,
            "type": "string"
          },
          {
            "name": "database",
            "in": "query",
            "description": "Source from which to retrieve data (\"sql\" or \"nosql\")",
            "required": true,
            "type": "string"
          },
          {
            "name": "updates",
            "in": "body",
            "description": "user to be updated",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "description": "Desired username/display name",
                  "type": "string"
                },
                "avitar": {
                  "description": "Desired avitar url",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "500": {
            "description": "Missing required field / malformed request"
          }
        }
      }
    },
    "/users/deleteUserById": {
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete a user by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of user to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "database",
            "in": "query",
            "description": "Source from which to retrieve data (\"sql\" or \"nosql\")",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "404": {
            "description": "Invalid id supplied"
          },
          "500": {
            "description": "Missing required field / malformed request"
          }
        }
      }
    }
  },
  "definitions": {
    "Users": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "5cdc8da9605d455b9f228071"
        },
        "username": {
          "type": "string",
          "example": "johnDoe123"
        },
        "avitar": {
          "type": "string",
          "example": "https://www.fillmurray.com/200x300"
        },
        "__v": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Posts": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "5cdc8da9605d455b9f228071"
        },
        "userRef": {
          "type": "string",
          "example": "5cdc8dee605d455b9f228072"
        },
        "content": {
          "type": "string",
          "example": "Hello world! This is a post!"
        },
        "timeStamp": {
          "type": "string",
          "example": "Wed May 15 2019 16:10:47 GMT-0600 (Mountain Daylight Time)"
        }
      }
    },
    "Comments": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "5cdc8da9605d455b9f228071"
        },
        "userRef": {
          "type": "string",
          "example": "5cdc8dee605d455b9f228072"
        },
        "postRef": {
          "type": "string",
          "example": "5cdc8da9605d455b9f228073"
        },
        "content": {
          "type": "string",
          "example": "Hello world! This is a post!"
        },
        "timeStamp": {
          "type": "string",
          "example": "Wed May 15 2019 16:10:47 GMT-0600 (Mountain Daylight Time)"
        }
      }
    },
    "Reactions": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "5cdc8da9605d455b9f228071"
        },
        "userRef": {
          "type": "string",
          "example": "5cdc8dee605d455b9f228072"
        },
        "postRef": {
          "type": "string",
          "example": "5cdc8da9605d455b9f228073"
        },
        "type": {
          "type": "string",
          "example": "Hello world! This is a post!"
        },
        "timeStamp": {
          "type": "string",
          "example": "Wed May 15 2019 16:10:47 GMT-0600 (Mountain Daylight Time)"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}